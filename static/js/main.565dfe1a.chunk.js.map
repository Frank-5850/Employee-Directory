{"version":3,"sources":["components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","App","filteredArray","useState","users","setUsers","useEffect","a","axios","get","randomUser","data","results","console","log","type","name","map","user","index","src","picture","thumbnail","first","last","email","location","country","login","username","gender","dob","age","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAUeA,EARA,WACb,OACE,qBAAKC,UAAU,qBAAf,SACE,oBAAIA,UAAU,4BAAd,qC,MCgGSC,MAhGf,WAAgB,IAgBVC,EAhBS,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,KAuCb,OAjBAC,qBAAU,WACR,sBAAC,4BAAAC,EAAA,+EAE4BC,IAAMC,IAC7B,gEAHL,OAESC,EAFT,OAKGR,EAAgBQ,EAAWC,KAAKC,QAChCC,QAAQC,IAAIZ,GACZG,EAASK,EAAWC,KAAKC,SAP5B,gDASGC,QAAQC,IAAR,MATH,wDAAD,GAYAN,IAAMC,IAAI,WACT,IAEHI,QAAQC,IAAIV,GAEV,sBAAKJ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,YAAf,SACE,iCACE,uBAAOe,KAAK,OAAOC,KAAK,eAD1B,IAC0C,iDAG5C,sBAAKhB,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,2CAAf,qBAGA,qBAAKA,UAAU,0CAAf,kBACA,qBAAKA,UAAU,0CAAf,mBACA,qBAAKA,UAAU,0CAAf,sBAGA,qBAAKA,UAAU,0CAAf,sBAGA,qBAAKA,UAAU,0CAAf,oBACA,qBAAKA,UAAU,0CAAf,oBAEDI,EAAMa,KAAI,SAACC,EAAMC,GAAP,OACT,sBAAKnB,UAAU,MAAf,UACE,qBACEA,UAAU,sDADZ,SAIE,qBAAKoB,IAAKF,EAAKG,QAAQC,aAFlBH,GAIP,sBAAKnB,UAAU,0CAAf,UACGkB,EAAKF,KAAKO,MADb,IACqBL,EAAKF,KAAKQ,QAE/B,qBAAKxB,UAAU,0CAAf,SACGkB,EAAKO,QAER,qBAAKzB,UAAU,0CAAf,SACGkB,EAAKQ,SAASC,UAEjB,qBAAK3B,UAAU,0CAAf,SACGkB,EAAKU,MAAMC,WAEd,qBAAK7B,UAAU,0CAAf,SACGkB,EAAKY,SAER,qBAAK9B,UAAU,0CAAf,SACGkB,EAAKa,IAAIC,mBChFTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.565dfe1a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"bg-dark text-light\">\r\n      <h1 className=\"container text-center p-3\"> Employee directory!</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n\n  const onChange = (e) => {\n    e.preventDefault();\n    let filterUsers = filteredArray.filter((user) => {\n      let firstName = user.name.first;\n      let lastName = user.name.last;\n      return (\n        firstName.includes(e.target.value) || lastName.includes(e.target.value)\n      );\n    });\n    console.log(filteredArray);\n    setUsers(filterUsers);\n  };\n\n  let filteredArray;\n\n  const submitButton = (e) => {\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const randomUser = await axios.get(\n          \"https://randomuser.me/api/?nat=us,dk,fr,gb,ca,nz&results=50 \"\n        );\n        filteredArray = randomUser.data.results;\n        console.log(filteredArray);\n        setUsers(randomUser.data.results);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n    axios.get(\"/test\");\n  }, []);\n\n  console.log(users);\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"container\">\n        <form>\n          <input type=\"text\" name=\"userSearch\" /> <button>Search</button>\n        </form>\n      </div>\n      <div className=\"container\">\n        <div className=\"row mt-3 \">\n          <div className=\"col-md-1 border border-dark text-center \">\n            Picture\n          </div>\n          <div className=\"col-md-2 border border-dark text-center\">Name</div>\n          <div className=\"col-md-3 border border-dark text-center\">Email</div>\n          <div className=\"col-md-2 border border-dark text-center\">\n            Location\n          </div>\n          <div className=\"col-md-2 border border-dark text-center\">\n            Username\n          </div>\n          <div className=\"col-md-1 border border-dark text-center\">Gender</div>\n          <div className=\"col-md-1 border border-dark text-center\">Age</div>\n        </div>\n        {users.map((user, index) => (\n          <div className=\"row\">\n            <div\n              className=\"col-md-1 border border-dark text-center center-text\"\n              key={index}\n            >\n              <img src={user.picture.thumbnail} />\n            </div>\n            <div className=\"col-md-2 border border-dark text-center\">\n              {user.name.first} {user.name.last}\n            </div>\n            <div className=\"col-md-3 border border-dark text-center\">\n              {user.email}\n            </div>\n            <div className=\"col-md-2 border border-dark text-center\">\n              {user.location.country}\n            </div>\n            <div className=\"col-md-2 border border-dark text-center\">\n              {user.login.username}\n            </div>\n            <div className=\"col-md-1 border border-dark text-center\">\n              {user.gender}\n            </div>\n            <div className=\"col-md-1 border border-dark text-center\">\n              {user.dob.age}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}